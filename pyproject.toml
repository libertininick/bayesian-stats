[tool.poetry]
name = "bayesian-stats"
version = "0.1.0"
description = "Sanbox library for learning Bayesian statistics and probabilistic programming"
authors = ["libertininick <libertini.nick@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "bayesian_stats", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
conda-lock = "^2.1.0"
numpy = "^1.25.0"
arviz = "^0.15.1"
matplotlib = "^3.7.1"
pandas = "^2.0.2"
scipy = "^1.11.0"
xarray = "^2023.6.0"
pyro-ppl = "^1.8.6"
torch = ">=2.0.0, !=2.0.1, !=2.1.0"
python-dotenv = "^1.0.0"


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
coverage = "^7.2.7"
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.4.1"
typeguard = "^4.0.0"
pytest = "^7.4.0"
flake8-docstrings = "^1.7.0"
hypothesis = "^6.88.1"
pytest-check = "^2.2.2"


[tool.poetry.group.jupyter.dependencies]
ipykernel = "^6.25.1"
ipympl = "^0.9.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.bandit]
targets = ["src"]
exclude_dirs = [
    "tests",
    "build",
]

[tool.black]
line-length = 79

[tool.coverage.run]
branch = true
data_file = "build/.coverage"
source = [
    "src",
    "tests",
]

[tool.coverage.report]
exclude_also = [
    "def __repr__"
]
fail_under = 90
precision = 1
show_missing = true
skip_covered = true
skip_empty = true

[tool.isort]
known_first_party = "bayesian_stats"
lines_after_imports = 2
profile = "black"
skip_gitignore = true
src_paths = ["src"]

[tool.mypy]
cache_dir = "./build/mypy"
disallow_untyped_defs = true
ignore_missing_imports = true
plugins = "numpy.typing.mypy_plugin"
pretty = true
show_column_numbers = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]
addopts = "-rf --doctest-modules --strict-markers"
cache_dir = "./build/pytest"
console_output_style = "progress"
markers = [
    "slow"
]
minversion = "6.0"
testpaths = [
    "src",
    "tests",
]